"VIM CONFIG (Last updated: 23 Nov 2017)"
"===========    Vim Plug    =========="
call plug#begin()

" Coding
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-syntastic/syntastic'
Plug 'https://github.com/jiangmiao/auto-pairs.git'
Plug 'Yggdroot/indentLine'
Plug 'sickill/vim-pasta'
Plug 'kien/ctrlp.vim'
Plug 'Valloric/YouCompleteMe'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'edkolev/tmuxline.vim'
Plug 'chrisbra/csv.vim'

" Java
Plug 'artur-shaik/vim-javacomplete2'

" LaTex
Plug 'vim-latex/vim-latex'
call plug#end()								        " initialize plugin system

" Additional Commands for Vim Plug
	" :PlugUpgrade							        " upgrade Vim Plug itself
	" :PlugInstall							        " install plugins
	" :PlugStatus							        " check the status of plugins

"===========    Mapping and Bindings    =========="
" editing and utilities
filetype plugin on 
syntax on
set mouse=a									        " enable mouse support
set laststatus=2							        " always show statusline
set number									        " show line number
set title									        " change terminal's title
set backspace=indent,eol,start				        " allow backspace over autoindent
set autowriteall							        " autosave files
set completeopt-=preview
set cursorline                                      " cursorline
set clipboard=unnamedplus                           " use system clipboard

" undo and history
set scrolloff=8								        " start scrolling 8 lines away from margins
set undofile								        " allow undo since creation of file
set undodir=$HOME/.vim/undo					        " set undo directory
set history=1000							        " increase history 
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set hidden

" tab and indentation
set tabstop=4								        " number of visual spaces per tab
set softtabstop=4							        " number of space per tab when editing
au FileType java setl sw=4 sts=4 et
set expandtab								        " tabs are spaces
set autoindent	        							"autoindent on a new line 
set smartindent

" search
set incsearch  			        					" search as characters are entered
set hlsearch   					        			" highlight matches
set ignorecase 							        	" ignore case when searching lowercase
set smartcase  							        	" don't ignore case when inserting uppercase characters

" backups
set nobackup   								        " disable backups
set noswapfile 								        " disable swapfiles


" bindings
inoremap jj <Esc>`^ :w<cr>                          " map jj to esc
nnoremap ; :
map <C-w> <Esc>:w<cr>

vnoremap <C-d> <Esc>:w<cr>:bd<cr>                   " close buffer
nnoremap <C-d> :bd<cr>                              " closer buffer

autocmd FileType txt nnoremap <F5> :PlugInstall<cr>                      " install plugins
autocmd FileType python nnoremap <buffer> <F5> :exec '!clear; python3' shellescape(@%, 1)<cr>
autocmd FileType java nnoremap <buffer> <F5> :! javac % <cr>
autocmd FileType java nnoremap <buffer> <F6> :! java %:r <cr>

" leader
let mapleader = ' '                                 " Leader Key
nnoremap <silent> <leader><space> :nohlsearch<cr>	" clear the highlighting of :set hlsearch
nnoremap <leader>ev :vsplit $MYVIMRC<cr>            " quickly open vimrc
nnoremap <leader>q  :x<cr>                          " easier quit
nnoremap <leader>w  :w<cr>                          " save

" Binding arrow keys in insert mode         #yolo
nnoremap <C-h> 5<Left>
nnoremap <C-j> 5<Down>
nnoremap <C-k> 5<Up>
nnoremap <C-l> 5<Right>

inoremap <C-j> <Left>
inoremap <C-l> <Right>

cnoremap <C-j> <Left>
cnoremap <C-l> <Down>
cnoremap <C-k> <Up>
cnoremap <C-;> <Right>

vnoremap <C-j> <Left>
vnoremap <C-l> <Down>
vnoremap <C-k> <Up>
vnoremap <C-;> <Right>

inoremap <C-o> <Esc>o

" Buffers
set splitbelow
set splitright
nnoremap <silent><space><Left> :bp<cr>
nnoremap <silent><space><Right> :bn<cr>
nnoremap <Tab><Tab> :CtrlP<cr> 
vnoremap <leader>d :bd<cr>                       " close buffer
nnoremap <leader>d :bd<cr>                       " closer buffer
nnoremap <leader>v  :vsplit<cr>
nnoremap <leader>h  :split<cr>

"===========    Plugin Configuration    ==========  
" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1 
let g:syntastic_loc_list_height = 5
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0 
let g:syntastic_enable_highlighting = 1
let g:synastic_enable_balloons = 0                 
let g:syntastic_python_checkers = ['pylint', 'python', 'pyflakes']
let g:syntastic_ignore_files = []
let g:syntastic_mode_map = {"mode": "passive", "active_filetypes": [], "passive_filetypes": []}

inoremap <C-e> <C-c>:SyntasticReset<cr>:w<cr>
nnoremap <silent> <leader><space> :SyntasticReset<cr>:nohlsearch<cr>
nnoremap <F4> :SyntasticCheck<cr> 
inoremap <F4> :SyntasticCheck<cr>

" NerdTRee
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif         " startup nerdtree if no files are direct

map <C-n> :NERDTreeToggle<cr>

" Theme
" let g:airline#extensions#tabline#enabled = 0
" let g:tmuxline_present = 'tmux'
colorscheme molokai
let molokai_original = 1
set t_Co=256
let g:rehash256 = 1
set background=dark
let g:airline_theme='badwolf'

" LaTex
let g:livepreview_previewer = 'okular'
let g:tex_flavor='latex'

